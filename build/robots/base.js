// Generated by CoffeeScript 1.10.0
(function() {
  var BaseRobot, Bet,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Bet = require('./bet');

  BaseRobot = (function() {
    function BaseRobot(options) {
      if (options == null) {
        options = {};
      }
      this.stop = bind(this.stop, this);
      this.funds = bind(this.funds, this);
      this.play = bind(this.play, this);
      this.bet = options.bet;
      this.money = options.money;
      this.stepsCount = options.stepsCount;
      this.profitKoef = options.profitKoef;
      this.puts = options.puts || false;
      this.betsData = [];
      this.matchData = [];
    }

    BaseRobot.prototype.play = function(data) {
      if (this.puts) {
        console.log("p1 - " + data.p1 + "; p2 - " + data.p2);
      }
      this.matchData.push(data);
      if (this.money < this.bet) {
        return;
      }
      return this.playAlgorithm(data);
    };

    BaseRobot.prototype.playAlgorithm = function() {
      throw 'fill play algorithm';
    };

    BaseRobot.prototype.makeBet = function(value, type, koef) {
      var bet;
      this.money -= value;
      if (this.puts) {
        console.log("Making bet " + value + " on " + type + " - " + koef);
      }
      bet = new Bet({
        value: value,
        type: type,
        k: koef
      });
      return this.betsData.push(bet);
    };

    BaseRobot.prototype.funds = function() {
      var i, len, obj, ref, res;
      res = {
        costs: 0,
        p1: 0,
        p2: 0,
        betsCount: this.betsData.length
      };
      ref = this.betsData;
      for (i = 0, len = ref.length; i < len; i++) {
        obj = ref[i];
        res.costs += obj.value;
        if (obj.type === 'p1') {
          res.p1 += obj.value * obj.k;
        } else {
          res.p2 += obj.value * obj.k;
        }
      }
      return res;
    };

    BaseRobot.prototype.stop = function() {
      this.betsData = [];
      return this.matchData = [];
    };

    return BaseRobot;

  })();

  module.exports = BaseRobot;

}).call(this);
