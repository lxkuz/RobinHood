// Generated by CoffeeScript 1.10.0
(function() {
  var Robot, app, bodyParser, err, error, express, filePath, fs, makePlayData, npid, path, pid, robovisor;

  fs = require('fs');

  path = require('path');

  npid = require('npid');

  express = require('express');

  Robot = require('../models/robot');

  bodyParser = require('body-parser');

  robovisor = require('../lib/robovisor');

  makePlayData = require('../lib/make-play-data');

  try {
    filePath = './pids/server.pid';
    if (fs.existsSync(filePath)) {
      fs.unlinkSync(filePath);
    }
    pid = npid.create(filePath);
    pid.removeOnExit();
  } catch (error) {
    err = error;
    console.log(err);
  }

  app = express();

  app.set('port', 8484);

  app.listen(app.get('port'));

  app.set('view engine', 'jade');

  app.use(express["static"](path.join(__dirname, '../../public')));

  app.use(bodyParser.urlencoded());

  app.get('/', function(req, res) {
    return Robot.all().then(function(robots) {
      return res.render('index', {
        title: 'RobinHoodXbet',
        robots: robots
      });
    });
  });

  app.post('/robots', function(req, res) {
    Robot.create({
      name: req.body.name,
      url: req.body.url,
      type: req.body.type
    });
    return res.redirect('/');
  });

  app.get('/new', function(req, res) {
    return res.render('new', {
      title: 'Новый робот'
    });
  });

  app.post('/robovisor/start', function(req, res) {
    return robovisor.start(function() {
      return res.redirect('/');
    });
  });

  app.post('/robots/:id/start', function(req, res) {
    return Robot.findById(req.param('id')).then(function(robot) {
      return robovisor.startInstance(robot, function() {
        return res.redirect('/');
      });
    });
  });

  app.post('/robots/:id', function(req, res) {
    return Robot.findById(req.param('id')).then(function(robot) {
      return robot.destroy().then(function() {
        return res.redirect('/');
      });
    });
  });

  app.post('/robovisor/stop', function(req, res) {
    return robovisor.stop(function() {
      return res.redirect('/');
    });
  });

  app.post('/robots/:id/kill', function(req, res) {
    return Robot.findById(req.param('id')).then(function(robot) {
      process.kill(robot.get('pid'));
      robot.set({
        state: 'stopped'
      });
      return robot.save().then(function() {
        return res.redirect('/');
      });
    });
  });

  app.get('/robots/:id', function(req, res) {
    return Robot.findById(req.param('id')).then(function(robot) {
      return res.render('show', {
        robot: robot,
        playData: makePlayData(robot)
      });
    });
  });

  app.listen(3000, function() {
    return console.log('RobinHood Viewer listen:3000');
  });

}).call(this);
