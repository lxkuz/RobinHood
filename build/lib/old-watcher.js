// Generated by CoffeeScript 1.10.0
(function() {
  var RobinHoodWatcher, Robot, Spooky, _, config, robotId;

  Spooky = require('spooky');

  config = require('config');

  _ = require('underscore');

  RobinHoodWatcher = (function() {
    function RobinHoodWatcher(gameUrl, callback) {
      var spooky;
      console.log("watch start " + gameUrl);
      this.gameUrl = gameUrl;
      this.callback = callback;
      spooky = new Spooky({
        child: {
          transport: 'http'
        },
        casper: {
          logLevel: 'debug',
          verbose: true,
          waitTimeout: 10000
        },
        clientScripts: ["build/client/viewer.js"]
      }, (function(_this) {
        return function(err) {
          var e, pageLoadedCallback, startCallback;
          if (err) {
            e = new Error('Failed to initialize SpookyJS');
            e.details = err;
            throw e;
          }
          pageLoadedCallback = function() {
            console.log('pageLoadedCallback...');
            return this.waitForSelector('#robinhood-info-module', function() {
              var data;
              console.log('@waitForSelector success...');
              data = JSON.parse(this.fetchText("#robinhood-info-module"));
              return this.emit('game-is-ready', data);
            });
          };
          spooky.on('game-is-ready', function(data) {
            console.log('game-is-ready');
            return _this.callback(data);
          });
          startCallback = function() {
            console.log('pageLoadedCallback...' + url);
            return this.wait(3000, function() {
              var name;
              console.log('@waitForSelector success...');
              name = url.split('/').join('_');
              return this.capture("out/" + name + ".png", {
                top: 0,
                left: 0,
                width: 2000,
                height: 1000
              });
            });
          };
          spooky.start(_this.gameUrl);
          spooky.then([
            {
              url: _this.gameUrl
            }, startCallback
          ]);
          spooky.run();
          spooky.on('error', function(e, stack) {
            console.error(e);
            if (stack) {
              return console.log(stack);
            }
          });
          spooky.on('console', function(line) {
            return console.log(line);
          });
          spooky.on('remote.message', function(message) {
            return console.log(message);
          });
          return spooky.on("page.error", function(msg, trace) {
            this.echo("Error:    " + msg, "ERROR");
            this.echo("file:     " + trace[0].file, "WARNING");
            this.echo("line:     " + trace[0].line, "WARNING");
            this.echo("function: " + trace[0]["function"], "WARNING");
            return errors.push(msg);
          });
        };
      })(this));
    }

    return RobinHoodWatcher;

  })();

  module.exports = RobinHoodWatcher;

  robotId = process.argv[2];

  if (robotId) {
    Robot = require('../models/robot');
    Robot.findById(robotId).then(function(robot) {
      var processUrl;
      processUrl = robot.get('url');
      return new RobinHoodWatcher(processUrl, function(data) {
        robot.set({
          gameData: JSON.stringify(data)
        });
        return robot.save();
      });
    });
  }

}).call(this);
