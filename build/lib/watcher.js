// Generated by CoffeeScript 1.10.0
(function() {
  var RobinHoodWatcher, Robot, Spooky, _, config, https, robotId,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Spooky = require('spooky');

  config = require('config');

  _ = require('underscore');

  https = require("https");

  RobinHoodWatcher = (function() {
    function RobinHoodWatcher(url, callback1) {
      var baseUrl, eventId, eventName;
      this.url = url;
      this.callback = callback1;
      this.readData = bind(this.readData, this);
      this.stopReadData = bind(this.stopReadData, this);
      eventName = _(this.url.split("/")).chain().compact().reverse().value()[0];
      eventId = eventName.split("-")[0];
      baseUrl = this.url.split("https://")[1].split("/")[0];
      this.gameUrl = {
        host: baseUrl,
        path: "/LiveFeed/GetGame?id=" + eventId + "&lng=ru&cfview=0"
      };
      this.options = this.gameUrl;
      this.gameData = [];
      this.readData();
    }

    RobinHoodWatcher.prototype.stopReadData = function() {
      if (!this.counter) {
        this.counter = 0;
      }
      this.counter += 1;
      return this.counter > 100;
    };

    RobinHoodWatcher.prototype.readData = function(callback) {
      return https.get(this.options, (function(_this) {
        return function(response) {
          var body;
          body = "";
          response.on('data', function(chunk) {
            return body += chunk;
          });
          return response.on('end', function() {
            var data, obj;
            data = JSON.parse(body);
            obj = {
              p1: data['Value']['Events'][0]['C'],
              p2: data['Value']['Events'][1]['C']
            };
            console.log(obj);
            _this.gameData.push(obj);
            return setTimeout(function() {
              if (_this.stopReadData()) {
                return callback(_this.gameData);
              } else {
                return _this.readData(callback);
              }
            }, 3000);
          });
        };
      })(this));
    };

    return RobinHoodWatcher;

  })();

  module.exports = RobinHoodWatcher;

  robotId = process.argv[2];

  if (robotId) {
    Robot = require('../models/robot');
    Robot.findById(robotId).then(function(robot) {
      var processUrl;
      processUrl = robot.get('url');
      return new RobinHoodWatcher(processUrl, function(data) {
        robot.set({
          gameData: JSON.stringify(data)
        });
        return robot.save();
      });
    });
  }

}).call(this);
